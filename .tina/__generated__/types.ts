//@ts-nocheck
// DO NOT MODIFY THIS FILE. This file is automatically generated by Tina
import { gql } from 'tinacms';
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
  /** References another document, used as a foreign key */
  Reference: any;
  JSON: any;
};

export type SystemInfo = {
  __typename?: 'SystemInfo';
  filename: Scalars['String'];
  basename: Scalars['String'];
  breadcrumbs: Array<Scalars['String']>;
  path: Scalars['String'];
  relativePath: Scalars['String'];
  extension: Scalars['String'];
  template: Scalars['String'];
  collection: Collection;
};


export type SystemInfoBreadcrumbsArgs = {
  excludeExtension?: InputMaybe<Scalars['Boolean']>;
};

export type PageInfo = {
  __typename?: 'PageInfo';
  hasPreviousPage: Scalars['Boolean'];
  hasNextPage: Scalars['Boolean'];
  startCursor: Scalars['String'];
  endCursor: Scalars['String'];
};

export type Node = {
  id: Scalars['ID'];
};

export type Document = {
  sys?: Maybe<SystemInfo>;
  id: Scalars['ID'];
  form: Scalars['JSON'];
  values: Scalars['JSON'];
};

/** A relay-compliant pagination connection */
export type Connection = {
  totalCount: Scalars['Float'];
};

export type Query = {
  __typename?: 'Query';
  getCollection: Collection;
  getCollections: Array<Collection>;
  node: Node;
  getDocument: DocumentNode;
  getDocumentList: DocumentConnection;
  getDocumentFields: Scalars['JSON'];
  getPageDocument: PageDocument;
  getPageList: PageConnection;
};


export type QueryGetCollectionArgs = {
  collection?: InputMaybe<Scalars['String']>;
};


export type QueryNodeArgs = {
  id?: InputMaybe<Scalars['String']>;
};


export type QueryGetDocumentArgs = {
  collection?: InputMaybe<Scalars['String']>;
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryGetDocumentListArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
};


export type QueryGetPageDocumentArgs = {
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryGetPageListArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
};

export type DocumentConnectionEdges = {
  __typename?: 'DocumentConnectionEdges';
  cursor?: Maybe<Scalars['String']>;
  node?: Maybe<DocumentNode>;
};

export type DocumentConnection = Connection & {
  __typename?: 'DocumentConnection';
  pageInfo?: Maybe<PageInfo>;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<DocumentConnectionEdges>>>;
};

export type Collection = {
  __typename?: 'Collection';
  name: Scalars['String'];
  slug: Scalars['String'];
  label?: Maybe<Scalars['String']>;
  path: Scalars['String'];
  format?: Maybe<Scalars['String']>;
  matches?: Maybe<Scalars['String']>;
  templates?: Maybe<Array<Maybe<Scalars['JSON']>>>;
  fields?: Maybe<Array<Maybe<Scalars['JSON']>>>;
  documents: DocumentConnection;
};


export type CollectionDocumentsArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
};

export type DocumentNode = PageDocument;

export type PageSeo = {
  __typename?: 'PageSeo';
  title?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
};

export type PageBlocksHeroActions = {
  __typename?: 'PageBlocksHeroActions';
  label?: Maybe<Scalars['String']>;
  icon?: Maybe<Scalars['String']>;
  variant?: Maybe<Scalars['String']>;
  url?: Maybe<Scalars['String']>;
};

export type PageBlocksHero = {
  __typename?: 'PageBlocksHero';
  headline?: Maybe<Scalars['String']>;
  subline?: Maybe<Scalars['String']>;
  actions?: Maybe<Array<Maybe<PageBlocksHeroActions>>>;
  videoSrc?: Maybe<Scalars['String']>;
};

export type PageBlocksFeaturesItemsFeatureMedia = {
  __typename?: 'PageBlocksFeaturesItemsFeatureMedia';
  src?: Maybe<Scalars['String']>;
  videoSrc?: Maybe<Scalars['String']>;
  cli?: Maybe<Scalars['Boolean']>;
};

export type PageBlocksFeaturesItemsFeatureActions = {
  __typename?: 'PageBlocksFeaturesItemsFeatureActions';
  label?: Maybe<Scalars['String']>;
  icon?: Maybe<Scalars['String']>;
  variant?: Maybe<Scalars['String']>;
  url?: Maybe<Scalars['String']>;
};

export type PageBlocksFeaturesItemsFeature = {
  __typename?: 'PageBlocksFeaturesItemsFeature';
  headline?: Maybe<Scalars['String']>;
  subline?: Maybe<Scalars['String']>;
  media?: Maybe<PageBlocksFeaturesItemsFeatureMedia>;
  actions?: Maybe<Array<Maybe<PageBlocksFeaturesItemsFeatureActions>>>;
};

export type PageBlocksFeaturesItems = PageBlocksFeaturesItemsFeature;

export type PageBlocksFeatures = {
  __typename?: 'PageBlocksFeatures';
  headline?: Maybe<Scalars['String']>;
  subline?: Maybe<Scalars['String']>;
  items?: Maybe<Array<Maybe<PageBlocksFeaturesItems>>>;
};

export type PageBlocksFlyingActions = {
  __typename?: 'PageBlocksFlyingActions';
  label?: Maybe<Scalars['String']>;
  icon?: Maybe<Scalars['String']>;
  variant?: Maybe<Scalars['String']>;
  url?: Maybe<Scalars['String']>;
};

export type PageBlocksFlyingItems = {
  __typename?: 'PageBlocksFlyingItems';
  headline?: Maybe<Scalars['String']>;
  subline?: Maybe<Scalars['String']>;
  cli?: Maybe<Scalars['Boolean']>;
};

export type PageBlocksFlying = {
  __typename?: 'PageBlocksFlying';
  headline?: Maybe<Scalars['String']>;
  subline?: Maybe<Scalars['String']>;
  actions?: Maybe<Array<Maybe<PageBlocksFlyingActions>>>;
  items?: Maybe<Array<Maybe<PageBlocksFlyingItems>>>;
};

export type PageBlocks = PageBlocksHero | PageBlocksFeatures | PageBlocksFlying;

export type Page = {
  __typename?: 'Page';
  title?: Maybe<Scalars['String']>;
  seo?: Maybe<PageSeo>;
  blocks?: Maybe<Array<Maybe<PageBlocks>>>;
};

export type PageDocument = Node & Document & {
  __typename?: 'PageDocument';
  id: Scalars['ID'];
  sys: SystemInfo;
  data: Page;
  form: Scalars['JSON'];
  values: Scalars['JSON'];
  dataJSON: Scalars['JSON'];
};

export type PageConnectionEdges = {
  __typename?: 'PageConnectionEdges';
  cursor?: Maybe<Scalars['String']>;
  node?: Maybe<PageDocument>;
};

export type PageConnection = Connection & {
  __typename?: 'PageConnection';
  pageInfo?: Maybe<PageInfo>;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<PageConnectionEdges>>>;
};

export type Mutation = {
  __typename?: 'Mutation';
  addPendingDocument: DocumentNode;
  updateDocument: DocumentNode;
  createDocument: DocumentNode;
  updatePageDocument: PageDocument;
  createPageDocument: PageDocument;
};


export type MutationAddPendingDocumentArgs = {
  collection: Scalars['String'];
  relativePath: Scalars['String'];
  template?: InputMaybe<Scalars['String']>;
};


export type MutationUpdateDocumentArgs = {
  collection?: InputMaybe<Scalars['String']>;
  relativePath: Scalars['String'];
  params: DocumentMutation;
};


export type MutationCreateDocumentArgs = {
  collection?: InputMaybe<Scalars['String']>;
  relativePath: Scalars['String'];
  params: DocumentMutation;
};


export type MutationUpdatePageDocumentArgs = {
  relativePath: Scalars['String'];
  params: PageMutation;
};


export type MutationCreatePageDocumentArgs = {
  relativePath: Scalars['String'];
  params: PageMutation;
};

export type DocumentMutation = {
  page?: InputMaybe<PageMutation>;
};

export type PageSeoMutation = {
  title?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
};

export type PageBlocksHeroActionsMutation = {
  label?: InputMaybe<Scalars['String']>;
  icon?: InputMaybe<Scalars['String']>;
  variant?: InputMaybe<Scalars['String']>;
  url?: InputMaybe<Scalars['String']>;
};

export type PageBlocksHeroMutation = {
  headline?: InputMaybe<Scalars['String']>;
  subline?: InputMaybe<Scalars['String']>;
  actions?: InputMaybe<Array<InputMaybe<PageBlocksHeroActionsMutation>>>;
  videoSrc?: InputMaybe<Scalars['String']>;
};

export type PageBlocksFeaturesItemsFeatureMediaMutation = {
  src?: InputMaybe<Scalars['String']>;
  videoSrc?: InputMaybe<Scalars['String']>;
  cli?: InputMaybe<Scalars['Boolean']>;
};

export type PageBlocksFeaturesItemsFeatureActionsMutation = {
  label?: InputMaybe<Scalars['String']>;
  icon?: InputMaybe<Scalars['String']>;
  variant?: InputMaybe<Scalars['String']>;
  url?: InputMaybe<Scalars['String']>;
};

export type PageBlocksFeaturesItemsFeatureMutation = {
  headline?: InputMaybe<Scalars['String']>;
  subline?: InputMaybe<Scalars['String']>;
  media?: InputMaybe<PageBlocksFeaturesItemsFeatureMediaMutation>;
  actions?: InputMaybe<Array<InputMaybe<PageBlocksFeaturesItemsFeatureActionsMutation>>>;
};

export type PageBlocksFeaturesItemsMutation = {
  feature?: InputMaybe<PageBlocksFeaturesItemsFeatureMutation>;
};

export type PageBlocksFeaturesMutation = {
  headline?: InputMaybe<Scalars['String']>;
  subline?: InputMaybe<Scalars['String']>;
  items?: InputMaybe<Array<InputMaybe<PageBlocksFeaturesItemsMutation>>>;
};

export type PageBlocksFlyingActionsMutation = {
  label?: InputMaybe<Scalars['String']>;
  icon?: InputMaybe<Scalars['String']>;
  variant?: InputMaybe<Scalars['String']>;
  url?: InputMaybe<Scalars['String']>;
};

export type PageBlocksFlyingItemsMutation = {
  headline?: InputMaybe<Scalars['String']>;
  subline?: InputMaybe<Scalars['String']>;
  cli?: InputMaybe<Scalars['Boolean']>;
};

export type PageBlocksFlyingMutation = {
  headline?: InputMaybe<Scalars['String']>;
  subline?: InputMaybe<Scalars['String']>;
  actions?: InputMaybe<Array<InputMaybe<PageBlocksFlyingActionsMutation>>>;
  items?: InputMaybe<Array<InputMaybe<PageBlocksFlyingItemsMutation>>>;
};

export type PageBlocksMutation = {
  hero?: InputMaybe<PageBlocksHeroMutation>;
  features?: InputMaybe<PageBlocksFeaturesMutation>;
  flying?: InputMaybe<PageBlocksFlyingMutation>;
};

export type PageMutation = {
  title?: InputMaybe<Scalars['String']>;
  seo?: InputMaybe<PageSeoMutation>;
  blocks?: InputMaybe<Array<InputMaybe<PageBlocksMutation>>>;
};

export type PagePartsFragment = { __typename?: 'Page', title?: string | null, seo?: { __typename: 'PageSeo', title?: string | null, description?: string | null } | null, blocks?: Array<{ __typename: 'PageBlocksHero', headline?: string | null, subline?: string | null, videoSrc?: string | null, actions?: Array<{ __typename: 'PageBlocksHeroActions', label?: string | null, icon?: string | null, variant?: string | null, url?: string | null } | null> | null } | { __typename: 'PageBlocksFeatures', headline?: string | null, subline?: string | null, items?: Array<{ __typename: 'PageBlocksFeaturesItemsFeature', headline?: string | null, subline?: string | null, media?: { __typename: 'PageBlocksFeaturesItemsFeatureMedia', src?: string | null, videoSrc?: string | null, cli?: boolean | null } | null, actions?: Array<{ __typename: 'PageBlocksFeaturesItemsFeatureActions', label?: string | null, icon?: string | null, variant?: string | null, url?: string | null } | null> | null } | null> | null } | { __typename: 'PageBlocksFlying', headline?: string | null, subline?: string | null, actions?: Array<{ __typename: 'PageBlocksFlyingActions', label?: string | null, icon?: string | null, variant?: string | null, url?: string | null } | null> | null, items?: Array<{ __typename: 'PageBlocksFlyingItems', headline?: string | null, subline?: string | null, cli?: boolean | null } | null> | null } | null> | null };

export type GetPageDocumentQueryVariables = Exact<{
  relativePath: Scalars['String'];
}>;


export type GetPageDocumentQuery = { __typename?: 'Query', getPageDocument: { __typename?: 'PageDocument', id: string, sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, data: { __typename?: 'Page', title?: string | null, seo?: { __typename: 'PageSeo', title?: string | null, description?: string | null } | null, blocks?: Array<{ __typename: 'PageBlocksHero', headline?: string | null, subline?: string | null, videoSrc?: string | null, actions?: Array<{ __typename: 'PageBlocksHeroActions', label?: string | null, icon?: string | null, variant?: string | null, url?: string | null } | null> | null } | { __typename: 'PageBlocksFeatures', headline?: string | null, subline?: string | null, items?: Array<{ __typename: 'PageBlocksFeaturesItemsFeature', headline?: string | null, subline?: string | null, media?: { __typename: 'PageBlocksFeaturesItemsFeatureMedia', src?: string | null, videoSrc?: string | null, cli?: boolean | null } | null, actions?: Array<{ __typename: 'PageBlocksFeaturesItemsFeatureActions', label?: string | null, icon?: string | null, variant?: string | null, url?: string | null } | null> | null } | null> | null } | { __typename: 'PageBlocksFlying', headline?: string | null, subline?: string | null, actions?: Array<{ __typename: 'PageBlocksFlyingActions', label?: string | null, icon?: string | null, variant?: string | null, url?: string | null } | null> | null, items?: Array<{ __typename: 'PageBlocksFlyingItems', headline?: string | null, subline?: string | null, cli?: boolean | null } | null> | null } | null> | null } } };

export type GetPageListQueryVariables = Exact<{ [key: string]: never; }>;


export type GetPageListQuery = { __typename?: 'Query', getPageList: { __typename?: 'PageConnection', totalCount: number, edges?: Array<{ __typename?: 'PageConnectionEdges', node?: { __typename?: 'PageDocument', id: string, sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, data: { __typename?: 'Page', title?: string | null, seo?: { __typename: 'PageSeo', title?: string | null, description?: string | null } | null, blocks?: Array<{ __typename: 'PageBlocksHero', headline?: string | null, subline?: string | null, videoSrc?: string | null, actions?: Array<{ __typename: 'PageBlocksHeroActions', label?: string | null, icon?: string | null, variant?: string | null, url?: string | null } | null> | null } | { __typename: 'PageBlocksFeatures', headline?: string | null, subline?: string | null, items?: Array<{ __typename: 'PageBlocksFeaturesItemsFeature', headline?: string | null, subline?: string | null, media?: { __typename: 'PageBlocksFeaturesItemsFeatureMedia', src?: string | null, videoSrc?: string | null, cli?: boolean | null } | null, actions?: Array<{ __typename: 'PageBlocksFeaturesItemsFeatureActions', label?: string | null, icon?: string | null, variant?: string | null, url?: string | null } | null> | null } | null> | null } | { __typename: 'PageBlocksFlying', headline?: string | null, subline?: string | null, actions?: Array<{ __typename: 'PageBlocksFlyingActions', label?: string | null, icon?: string | null, variant?: string | null, url?: string | null } | null> | null, items?: Array<{ __typename: 'PageBlocksFlyingItems', headline?: string | null, subline?: string | null, cli?: boolean | null } | null> | null } | null> | null } } | null } | null> | null } };

export const PagePartsFragmentDoc = gql`
    fragment PageParts on Page {
  title
  seo {
    __typename
    title
    description
  }
  blocks {
    __typename
    ... on PageBlocksHero {
      headline
      subline
      actions {
        __typename
        label
        icon
        variant
        url
      }
      videoSrc
    }
    ... on PageBlocksFeatures {
      headline
      subline
      items {
        __typename
        ... on PageBlocksFeaturesItemsFeature {
          headline
          subline
          media {
            __typename
            src
            videoSrc
            cli
          }
          actions {
            __typename
            label
            icon
            variant
            url
          }
        }
      }
    }
    ... on PageBlocksFlying {
      headline
      subline
      actions {
        __typename
        label
        icon
        variant
        url
      }
      items {
        __typename
        headline
        subline
        cli
      }
    }
  }
}
    `;
export const GetPageDocumentDocument = gql`
    query getPageDocument($relativePath: String!) {
  getPageDocument(relativePath: $relativePath) {
    sys {
      filename
      basename
      breadcrumbs
      path
      relativePath
      extension
    }
    id
    data {
      ...PageParts
    }
  }
}
    ${PagePartsFragmentDoc}`;
export const GetPageListDocument = gql`
    query getPageList {
  getPageList {
    totalCount
    edges {
      node {
        id
        sys {
          filename
          basename
          breadcrumbs
          path
          relativePath
          extension
        }
        data {
          ...PageParts
        }
      }
    }
  }
}
    ${PagePartsFragmentDoc}`;
export type Requester<C= {}> = <R, V>(doc: DocumentNode, vars?: V, options?: C) => Promise<R>
  export function getSdk<C>(requester: Requester<C>) {
    return {
      getPageDocument(variables: GetPageDocumentQueryVariables, options?: C): Promise<{data: GetPageDocumentQuery, variables: GetPageDocumentQueryVariables, query: string}> {
        return requester<{data: GetPageDocumentQuery, variables: GetPageDocumentQueryVariables, query: string}, GetPageDocumentQueryVariables>(GetPageDocumentDocument, variables, options);
      },
    getPageList(variables?: GetPageListQueryVariables, options?: C): Promise<{data: GetPageListQuery, variables: GetPageListQueryVariables, query: string}> {
        return requester<{data: GetPageListQuery, variables: GetPageListQueryVariables, query: string}, GetPageListQueryVariables>(GetPageListDocument, variables, options);
      }
    };
  }
  export type Sdk = ReturnType<typeof getSdk>;

// TinaSDK generated code
import { staticRequest } from 'tinacms'
const requester: (doc: any, vars?: any, options?: any) => Promise<any> = async (
  doc,
  vars,
  _options
) => {
  let data = {}
  try {
    data = await staticRequest({
      query: doc,
      variables: vars,
    })
  } catch (e) {
    // swallow errors related to document creation
    console.warn('Warning: There was an error when fetching data')
    console.warn(e)
  }

  return { data, query: doc, variables: vars || {} }
}

/**
 * @experimental this class can be used but may change in the future
 **/
export const ExperimentalGetTinaClient = ()=>getSdk(requester)

