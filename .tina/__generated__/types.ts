// DO NOT MODIFY THIS FILE. This file is automatically generated by Tina
export type Maybe<T> = T | null;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
  /** References another document, used as a foreign key */
  Reference: any;
  JSON: any;
  JSONObject: any;
};

export type Node = {
  id: Scalars['ID'];
};

export type Document = {
  sys?: Maybe<SystemInfo>;
  id: Scalars['ID'];
};

export type FormField = {
  label?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  component?: Maybe<Scalars['String']>;
};




export type SystemInfo = {
  __typename?: 'SystemInfo';
  filename?: Maybe<Scalars['String']>;
  basename?: Maybe<Scalars['String']>;
  breadcrumbs?: Maybe<Array<Maybe<Scalars['String']>>>;
  path?: Maybe<Scalars['String']>;
  relativePath?: Maybe<Scalars['String']>;
  extension?: Maybe<Scalars['String']>;
  template?: Maybe<Scalars['String']>;
  collection?: Maybe<Section>;
};


export type SystemInfoBreadcrumbsArgs = {
  excludeExtension?: Maybe<Scalars['Boolean']>;
};

export type Section = {
  __typename?: 'Section';
  type?: Maybe<Scalars['String']>;
  path?: Maybe<Scalars['String']>;
  label?: Maybe<Scalars['String']>;
  create?: Maybe<Scalars['String']>;
  match?: Maybe<Scalars['String']>;
  new_doc_ext?: Maybe<Scalars['String']>;
  templates?: Maybe<Array<Maybe<Scalars['String']>>>;
  slug?: Maybe<Scalars['String']>;
  documents?: Maybe<Array<Maybe<Document>>>;
};

export type SectionDocumentUnion = Blog_Document;

export type SectionParams = {
  blog?: Maybe<Blog_Input>;
};

export type Mutation = {
  __typename?: 'Mutation';
  addPendingDocument?: Maybe<Document>;
  updateDocument?: Maybe<SectionDocumentUnion>;
  updateBlogDocument?: Maybe<Blog_Document>;
};


export type MutationAddPendingDocumentArgs = {
  relativePath?: Maybe<Scalars['String']>;
  collection?: Maybe<Scalars['String']>;
  template?: Maybe<Scalars['String']>;
};


export type MutationUpdateDocumentArgs = {
  relativePath?: Maybe<Scalars['String']>;
  params?: Maybe<SectionParams>;
};


export type MutationUpdateBlogDocumentArgs = {
  relativePath?: Maybe<Scalars['String']>;
  params?: Maybe<Blog_Input>;
};

export type Query = {
  __typename?: 'Query';
  node?: Maybe<Node>;
  getDocument?: Maybe<SectionDocumentUnion>;
  getCollections?: Maybe<Array<Maybe<Section>>>;
  getCollection?: Maybe<Section>;
  getBlogDocument?: Maybe<Blog_Document>;
  getBlogList?: Maybe<Array<Maybe<Blog_Document>>>;
};


export type QueryNodeArgs = {
  id: Scalars['ID'];
};


export type QueryGetDocumentArgs = {
  collection?: Maybe<Scalars['String']>;
  relativePath?: Maybe<Scalars['String']>;
};


export type QueryGetCollectionArgs = {
  collection?: Maybe<Scalars['String']>;
};


export type QueryGetBlogDocumentArgs = {
  relativePath?: Maybe<Scalars['String']>;
};

export type Blog_Data = Basic_Doc_Data;

export type Blog_Input = {
  basic?: Maybe<Basic_Doc_Input>;
};

export type Blog_Values = Basic_Doc_Values;

export type Blog_Form = Basic_Doc_Form;

export type Blog_Document = Node & Document & {
  __typename?: 'Blog_Document';
  id: Scalars['ID'];
  sys?: Maybe<SystemInfo>;
  data?: Maybe<Blog_Data>;
  values?: Maybe<Blog_Values>;
  form?: Maybe<Blog_Form>;
};

export type Basic_Consumes_Data = {
  __typename?: 'Basic_Consumes_Data';
  file?: Maybe<Scalars['String']>;
  details?: Maybe<Scalars['String']>;
};

export type Basic_Doc_Data = {
  __typename?: 'Basic_Doc_Data';
  date?: Maybe<Scalars['String']>;
  author?: Maybe<Scalars['String']>;
  last_edited?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  draft?: Maybe<Scalars['Boolean']>;
  prev?: Maybe<Scalars['String']>;
  next?: Maybe<Scalars['String']>;
  consumes?: Maybe<Array<Maybe<Basic_Consumes_Data>>>;
  _body?: Maybe<Scalars['String']>;
};

export type Basic_Consumes_Values = {
  __typename?: 'Basic_Consumes_Values';
  file?: Maybe<Scalars['String']>;
  details?: Maybe<Scalars['String']>;
};

export type Basic_Doc_Values = {
  __typename?: 'Basic_Doc_Values';
  date?: Maybe<Scalars['String']>;
  author?: Maybe<Scalars['String']>;
  last_edited?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  draft?: Maybe<Scalars['Boolean']>;
  prev?: Maybe<Scalars['String']>;
  next?: Maybe<Scalars['String']>;
  consumes?: Maybe<Array<Maybe<Basic_Consumes_Values>>>;
  _body?: Maybe<Scalars['String']>;
  _template?: Maybe<Scalars['String']>;
};

export type TextField = FormField & {
  __typename?: 'TextField';
  name?: Maybe<Scalars['String']>;
  label?: Maybe<Scalars['String']>;
  component?: Maybe<Scalars['String']>;
};

export type BooleanField = FormField & {
  __typename?: 'BooleanField';
  name?: Maybe<Scalars['String']>;
  label?: Maybe<Scalars['String']>;
  component?: Maybe<Scalars['String']>;
};

export type Basic_Consumes_FormFieldsUnion = TextField;

export type Basic_Consumes_GroupListField = FormField & {
  __typename?: 'Basic_Consumes_GroupListField';
  name?: Maybe<Scalars['String']>;
  label?: Maybe<Scalars['String']>;
  component?: Maybe<Scalars['String']>;
  fields?: Maybe<Array<Maybe<Basic_Consumes_FormFieldsUnion>>>;
};

export type TextareaField = FormField & {
  __typename?: 'TextareaField';
  name?: Maybe<Scalars['String']>;
  label?: Maybe<Scalars['String']>;
  component?: Maybe<Scalars['String']>;
};

export type Basic_Doc_FormFieldsUnion = TextField | BooleanField | Basic_Consumes_GroupListField | TextareaField;

export type Basic_Doc_Form = {
  __typename?: 'Basic_Doc_Form';
  label?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  fields?: Maybe<Array<Maybe<Basic_Doc_FormFieldsUnion>>>;
};

export type Basic_Consumes_Input = {
  file?: Maybe<Scalars['String']>;
  details?: Maybe<Scalars['String']>;
};

export type Basic_Doc_Input = {
  date?: Maybe<Scalars['String']>;
  author?: Maybe<Scalars['String']>;
  last_edited?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  draft?: Maybe<Scalars['Boolean']>;
  prev?: Maybe<Scalars['String']>;
  next?: Maybe<Scalars['String']>;
  consumes?: Maybe<Array<Maybe<Basic_Consumes_Input>>>;
  _body?: Maybe<Scalars['String']>;
};

